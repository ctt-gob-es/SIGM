
CREATE UNIQUE INDEX CONFIRMACION_PENDIENTES_PK ON CONFIRMACION_PENDIENTES
(CD_INTERCAMBIO)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


CREATE INDEX FKI_SIR_INTERESADOS_ASIENTO ON SIR_INTERESADOS
(ID_ASIENTO_REGISTRAL)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


CREATE INDEX IX_SIR_AREGS_ER_INT ON SIR_ASIENTOS_REGISTRALES
(CD_ENT_REG, CD_INTERCAMBIO)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


CREATE UNIQUE INDEX IX_SIR_CONFIGURACION_NOMBRE ON SIR_CONFIGURACION
(NOMBRE)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;




CREATE UNIQUE INDEX PK_ID_ORGANISMOS ON RELACION_ID_ORGANISMOS
(CD_ORGANISMO_ORIGINAL, CD_ORGANISMO_DIRECTORIO)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


CREATE UNIQUE INDEX PK_ID_REINTENTO ON REINTENTOS_ENVIO
(ID_REINTENTO)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


CREATE UNIQUE INDEX PK_PARAMETRO ON CONFIGURACION
(PARAMETRO)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;



CREATE UNIQUE INDEX PLANIFICACION_ENVIO_PK ON PLANIFICACION_ENVIO
(ID_PLANIFICACION)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


CREATE UNIQUE INDEX URL_APLICACIONES_PK ON URL_APLICACIONES
(CD_OFICINA_REGISTRO)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;



CREATE INDEX FKI_SIR_ANEXOS_ASIENTO ON SIR_ANEXOS
(ID_ASIENTO_REGISTRAL)
LOGGING
TABLESPACE SIGMSIRI
NOPARALLEL;


ALTER TABLE DOCUMENTOS ADD (
  CONSTRAINT PK_DOCUMENTOS
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE SIGMSIRI);

ALTER TABLE SIR_ASIENTOS_REGISTRALES ADD (
  CONSTRAINT PK_SIR_ASIENTOS_REGISTRALES
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE SIGMSIRI);

ALTER TABLE SIR_CONFIGURACION ADD (
  CONSTRAINT PK_SIR_CONFIGURACION
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE SIGMSIRI);

ALTER TABLE SIR_CONTADORES ADD (
  CONSTRAINT PK_SIR_CONTADORES
 PRIMARY KEY
 (CD_ENT_REG, TIPO)
    USING INDEX 
    TABLESPACE SIGMSIRI);

ALTER TABLE SIR_INTERESADOS ADD (
  CONSTRAINT PK_SIR_INTERESADOS
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE SIGMSIRI);

ALTER TABLE SIR_ANEXOS ADD (
  CONSTRAINT PK_SIR_ANEXOS
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE SIGMSIRI);

ALTER TABLE SIR_INTERESADOS ADD (
  CONSTRAINT FK_SIR_INTERESADOS_ASIENTO 
 FOREIGN KEY (ID_ASIENTO_REGISTRAL) 
 REFERENCES SIR_ASIENTOS_REGISTRALES (ID));

ALTER TABLE SIR_ANEXOS ADD (
  CONSTRAINT FK_SIR_ANEXOS_ASIENTO 
 FOREIGN KEY (ID_ASIENTO_REGISTRAL) 
 REFERENCES SIR_ASIENTOS_REGISTRALES (ID));

ALTER TABLE QRTZ_CALENDARS ADD (
  PRIMARY KEY
 (CALENDAR_NAME));

ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  PRIMARY KEY
 (ENTRY_ID));

ALTER TABLE QRTZ_JOB_DETAILS ADD (
  PRIMARY KEY
 (JOB_NAME, JOB_GROUP));

ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  PRIMARY KEY
 (JOB_NAME, JOB_GROUP, JOB_LISTENER));

ALTER TABLE QRTZ_LOCKS ADD (
  PRIMARY KEY
 (LOCK_NAME));

ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD (
  PRIMARY KEY
 (TRIGGER_GROUP));

ALTER TABLE QRTZ_SCHEDULER_STATE ADD (
  PRIMARY KEY
 (INSTANCE_NAME));

ALTER TABLE QRTZ_TRIGGERS ADD (
  PRIMARY KEY
 (TRIGGER_NAME, TRIGGER_GROUP));

ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  PRIMARY KEY
 (TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_LISTENER));

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD (
  PRIMARY KEY
 (TRIGGER_NAME, TRIGGER_GROUP));

ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  PRIMARY KEY
 (TRIGGER_NAME, TRIGGER_GROUP));

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  PRIMARY KEY
 (TRIGGER_NAME, TRIGGER_GROUP));

ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  FOREIGN KEY (JOB_NAME, JOB_GROUP) 
 REFERENCES QRTZ_JOB_DETAILS (JOB_NAME,JOB_GROUP));

ALTER TABLE QRTZ_TRIGGERS ADD (
  FOREIGN KEY (JOB_NAME, JOB_GROUP) 
 REFERENCES QRTZ_JOB_DETAILS (JOB_NAME,JOB_GROUP));

ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));

ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));
SET DEFINE OFF;
COMMIT;
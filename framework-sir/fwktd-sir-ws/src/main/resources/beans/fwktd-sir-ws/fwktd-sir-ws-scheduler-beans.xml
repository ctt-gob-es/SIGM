<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	default-lazy-init="false">


	<bean id="schedulerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey" value="applicationContext"></property>
		<property name="overwriteExistingJobs" value="true" />
		<property name="dataSource" ref="fwktd_sir_dataSource" />
		<property name="autoStartup" value="true" />
		<property name="jobDetails">
			<list>
				<ref bean="recepcionFicherosJobDetail" />
				<ref bean="comprobarTimeOutEnviosJobDetail" />
				<ref bean="eliminarAsientosPorEstadosJobDetail" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="comprobarTimeOutEnviosJobTrigger" />
				<ref bean="recepcionFicherosJobTrigger" /> 
				<ref bean="eliminarAsientosPorEstadosJobTrigger" />
			</list>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">UpdateSirBatchScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">25</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.WebLogicDelegate</prop>
				<prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
				<prop key="org.quartz.jobStore.isClustered">S</prop>

			</props>
		</property>
	</bean>

	<bean id="recepcionFicherosJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		lazy-init="true">
		<property name="jobDetail" ref="recepcionFicherosJobDetail" />
		<property name="cronExpression" value="0 0/20 * * * ?" />
	</bean>

	<bean id="comprobarTimeOutEnviosJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		lazy-init="true">
		<property name="jobDetail" ref="comprobarTimeOutEnviosJobDetail" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>

	<bean id="eliminarAsientosPorEstadosJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		lazy-init="true">
		<property name="jobDetail" ref="eliminarAsientosPorEstadosJobDetail" />
		<property name="cronExpression" value="0 0 0/5 * * ?" />
	</bean>


	<!-- Examples -->
	<!-- <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean"> 
		<property name="jobDetail" ref="testJob" /> <property name="repeatInterval" 
		value="60000" /> </bean> <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
		<property name="jobDetail" ref="testJob" /> <property name="cronExpression" 
		value="0/5 * * * * ?" /> </bean> -->

</beans>